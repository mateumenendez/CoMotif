devtools::load_all()
devtools::test()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
test_that("conf.motifs", {
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized")
expect_equal(round(sum(res[,2:8]), digits = 2), 1.85)
})
test_that("motifs", {
data(pos)
data(neg)
res <- motifs(pos = pos, neg = neg, network_name = "test_network", out = "count")
groups <- res$groups
expect_equal(sum(groups[,-1]), 42)
count <- res$count
expect_equal(sum(count[,2:8]), 14)
})
data(pos)
data(neg)
res <- motifs(pos = pos, neg = neg, network_name = "test_network", out = "count")
groups <- res$groups
sum(groups[,-1])
count <- res$count
sum(count[,2:8])
expect_equal(sum(count[,2:8]), 14)
data(pos)
data(neg)
res <- motifs(pos = pos, neg = neg, network_name = "test_network", out = "count", square.motifs = T)
groups <- res$groups
sum(groups[,-1])
count <- res$count
sum(count[,2:8])
test_that("motifs", {
data(pos)
data(neg)
res <- motifs(pos = pos, neg = neg, network_name = "test_network", out = "count", square.motifs = T)
groups <- res$groups
expect_equal(sum(groups[,-1]), 102)
count <- res$count
expect_equal(sum(count[,2:8]), 14)
})
context("Testing conf.motifs")
test_that("conf.motifs", {
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized")
expect_equal(round(sum(res[,2:8]), digits = 2), 1.85)
})
devtools::load_all()
devtools::test()
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized")
round(sum(res[,2:8]), digits = 2)
test_that("conf.motifs.p", {
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized")
expect_equal(round(sum(res[,2:8]), digits = 2), 2.22)
})
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized")
expect_equal(round(sum(res[,2:8]), digits = 2), 2.22)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
View(res)
round(sum(res[,2:13]), digits = 2)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 10, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "normalized", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,2:13]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,14:15]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,14:15]), digits = 2), 2.81)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,14:15]), digits = 2), 408)
data(pos)
data(neg)
RNGversion("3.6")
set.seed(999)
res <- conf.motifs.p(pos = pos, neg = neg, network_name = "test_network",
num_random_networks = 12, out = "count", cores = 2, square.motifs = T)
expect_equal(round(sum(res[,14:15]), digits = 2), 408)
devtools::test()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
